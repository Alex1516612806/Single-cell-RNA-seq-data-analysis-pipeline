knitr::opts_chunk$set(echo = TRUE)
cran_packages <- c(
"Seurat","enrichR","DT"
)
cran_np <- cran_packages[!(cran_packages %in% installed.packages()[,"Package"])]
if(length(cran_np)) {
install.packages(cran_np)
}
library(Seurat)
library(enrichR)
library(DT)
knitr::opts_knit$set(root.dir = "C:/Users/Alex1/Desktop/scRNAseq-template-master")
# setwd()
## list all enrichr database
# listEnrichrDbs()
## Change to human or mouse
dbs <- c("GO_Molecular_Function_2018", "GO_Cellular_Component_2018", "GO_Biological_Process_2018","KEGG_2019_Human")
counts <- read.csv("count-data-scrna.csv",stringsAsFactors = F,check.names = F, row.names = 1)
meta <- read.csv("col-data-scrna.csv",stringsAsFactors = F, row.names = 1)
# Overview of the dataset
counts[1:10, ]
meta[1:10,]
# choose whahtever column as design
obj <- CreateSeuratObject(counts = counts, project = "scRNAseq", min.cells = 3, min.features = 200)
obj <- AddMetaData(object = obj, metadata = meta)
obj <- NormalizeData(obj)
obj <- FindVariableFeatures(obj, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(obj)
obj <- ScaleData(obj, features = all.genes)
obj <- RunPCA(obj, features = VariableFeatures(object = obj))
ElbowPlot(obj)
obj <- FindNeighbors(obj, dims = 1:10)
obj <- FindClusters(obj, resolution = 0.5)
obj <- RunUMAP(obj, dims = 1:10)
DimPlot(obj, reduction = "umap")
Idents(obj) <- obj$Cluster
DimPlot(obj, reduction = "umap")
Idents(obj) <- obj$Time
DimPlot(obj, reduction = "umap")
Idents(obj) <- obj$Condition
DimPlot(obj, reduction = "umap")
Idents(obj) <- obj$Condition
cts_de_genes <- FindMarkers(obj, ident.1 = "Control", ident.2 = "Disease")
DT::datatable(cts_de_genes, extensions = c('FixedColumns','Buttons'),
options = list(
pageLength = 5,
scrollX = TRUE,
scrollCollapse = TRUE,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel')
))
Idents(obj) <- obj$Condition
VlnPlot(obj, features = rownames(cts_de_genes[which(cts_de_genes$p_val_adj < 0.05),])[1:10])
# This select genes of adj.p.value < 0.05, sometimes people use different threshold, like adding log2foldchange threshold.
enriched_combined <- enrichr(rownames(cts_de_genes[which(cts_de_genes$p_val_adj < 0.05 & abs(cts_de_genes$avg_logFC) > 1.5),]),dbs)
# This select genes of adj.p.value < 0.05, sometimes people use different threshold, like adding log2foldchange threshold.
enriched_combined <- enrichr(rownames(cts_de_genes[which(cts_de_genes$p_val_adj < 0.05 & abs(cts_de_genes$avg_logFC) > 1.5),]),dbs)
